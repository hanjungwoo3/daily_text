name: Build & Release APK

on:
  push:
    branches:
      - main
    paths:
      - 'app/build.gradle'
      - 'app/src/**'
      - '.github/workflows/build-apk.yml'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Extract version from build.gradle
        id: get_version
        run: |
          VERSION_NAME=$(grep "versionName" app/build.gradle | awk -F'"' '{print $2}')
          VERSION_CODE=$(grep "versionCode" app/build.gradle | head -1 | awk '{print $2}')
          echo "VERSION_NAME=$VERSION_NAME" >> $GITHUB_OUTPUT
          echo "VERSION_CODE=$VERSION_CODE" >> $GITHUB_OUTPUT
          echo "Version: $VERSION_NAME (code: $VERSION_CODE)"

      - name: Check if tag exists
        id: check_tag
        run: |
          if git rev-parse "v${{ steps.get_version.outputs.VERSION_NAME }}" >/dev/null 2>&1; then
            echo "TAG_EXISTS=true" >> $GITHUB_OUTPUT
            echo "Tag v${{ steps.get_version.outputs.VERSION_NAME }} already exists"
          else
            echo "TAG_EXISTS=false" >> $GITHUB_OUTPUT
            echo "Tag v${{ steps.get_version.outputs.VERSION_NAME }} does not exist"
          fi

      - name: Build with Gradle (Debug)
        if: steps.check_tag.outputs.TAG_EXISTS == 'false'
        run: ./gradlew assembleDebug

      - name: Build with Gradle (Release)
        if: steps.check_tag.outputs.TAG_EXISTS == 'false'
        run: ./gradlew assembleRelease

      - name: Create Tag
        if: steps.check_tag.outputs.TAG_EXISTS == 'false'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "v${{ steps.get_version.outputs.VERSION_NAME }}" -m "Release v${{ steps.get_version.outputs.VERSION_NAME }}"
          git push origin "v${{ steps.get_version.outputs.VERSION_NAME }}"

      - name: Create Release
        if: steps.check_tag.outputs.TAG_EXISTS == 'false'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.get_version.outputs.VERSION_NAME }}
          name: Release v${{ steps.get_version.outputs.VERSION_NAME }}
          body: |
            ## 📱 Daily Text 앱 v${{ steps.get_version.outputs.VERSION_NAME }}
            
            ### 설치 방법
            1. 아래 APK 파일을 다운로드하세요
            2. 다운로드한 APK 파일을 실행하여 설치하세요
            
            ### 파일
            - **daily_text-debug.apk**: 디버그 버전
            - **daily_text-release.apk**: 릴리즈 버전 (권장)
            
            ---
            *Version Code: ${{ steps.get_version.outputs.VERSION_CODE }}*
          files: |
            app/build/outputs/apk/debug/daily_text-debug.apk
            app/build/outputs/apk/release/daily_text-release.apk
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 